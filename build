#!/bin/zsh

eval `opam config env --switch=4.05.0+flambda`

cd `dirname $0`
BASEDIR=`pwd`

envset(){
  case $1 in
  theories/before) COQVER=orig; vfiles=(presburger.v extraction.v) ;;
  theories/after) COQVER=mod; vfiles=(presburger.v extraction.v) ;;
  theories/marray)
    COQVER=mod
    vfiles=(core.v extraction_ocaml.v union_find.v floyd_warshall.v)
  ;;
  esac

  MATHCOMP=$BASEDIR/math-comp-$COQVER/mathcomp
  REGULAR=$BASEDIR/regular-$COQVER
  COQPREFIX=$BASEDIR/coq-$COQVER
  COQBIN=$COQPREFIX/bin
  COQLIB="-I $MATHCOMP -R $MATHCOMP mathcomp -R $REGULAR regular"
}

export GREP_COLORS='ms=101:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36'

puterr(){
  echo $1 >&2
  error=1
}

#### Proof Scripts

foreach dir (theories/before theories/after theories/marray)
pushd $dir

  envset $dir
  error=

  for f in $vfiles; do
    tail -c 1 $f | grep -q . && puterr "$f: no newline at end of file"
    tail -n 1 $f | grep -qv . && puterr "$f: trailing empty line"
    grep --color=auto -H -n " * $" $f && error=1
  done

  [[ -n $error ]] && exit 1

  (echo $COQLIB; echo $vfiles) > _CoqProject

  make -j ${JOBS:-4} VFILES="$vfiles" PATH="$COQBIN:$PATH" COQLIBS="$COQLIB"

popd # theories/*
end

#### Benchmarks

pushd ocaml

  echo 'module Presburger = Presburger_before;;' > def.ml
  ocamlbuild -build-dir _before presburger_main.native
  
  echo 'module Presburger = Presburger_after;;' > def.ml
  ocamlbuild -build-dir _after presburger_main.native
  
  ocamlbuild -build-dir _matrix matrix_main.native
  ocamlbuild -build-dir _matrix -ocamlc ocamlcp matrix_main.byte

  ocamlbuild -build-dir _wuf \
    -tag 'optimize(3)' \
    -tag 'remove_unused_arguments' \
    -tag 'inline_max_depth(1)' \
    -tag 'inlining_report' \
    wuf_main.native

  ocamlbuild -build-dir _floyd_warshall \
    -tag 'optimize(3)' \
    -tag 'remove_unused_arguments' \
    -tag 'inline_max_depth(1)' \
    -tag 'inlining_report' \
    floyd_warshall_main.native
  #ocamlbuild -build-dir _floyd_warshall -ocamlc ocamlcp floyd_warshall_main.byte

popd # ocaml
