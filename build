#!/bin/zsh

eval `opam config env --switch=4.07.0+flambda`

cd `dirname $0`
BASEDIR=`pwd`

envset(){
  case $1 in
  theories/before) COQVER=orig; vfiles=(presburger.v extraction.v) ;;
  theories/after) COQVER=mod; vfiles=(presburger.v extraction.v) ;;
  theories/misc)
    COQVER=mod
    vfiles=(extraction_ocaml.v reflection_base.v mergesort.v)
  ;;
  theories/marray)
    COQVER=mod
    vfiles=(ordinal_ext.v core.v extraction_ocaml.v \
            union_find.v floyd_warshall.v quicksort.v)
  ;;
  theories/marray2)
    COQVER=mod
    vfiles=(ordinal_ext.v core.v extraction_ocaml.v \
            union_find.v floyd_warshall.v quicksort.v)
  ;;
  esac

  MATHCOMP=$BASEDIR/math-comp-$COQVER/mathcomp
  REGULAR=$BASEDIR/regular-$COQVER
  COQPREFIX=$BASEDIR/coq-$COQVER
  COQBIN=$COQPREFIX/bin
  COQLIB="-R $MATHCOMP mathcomp -R $REGULAR regular"
}

export GREP_COLORS='ms=101:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36'

puterr(){
  echo $1 >&2
  error=1
}

#### Proof Scripts

foreach dir (theories/before theories/after theories/misc \
             theories/marray theories/marray2)
pushd $dir

  envset $dir
  error=

  for f in $vfiles; do
    tail -c 1 $f | grep -q . && puterr "$f: no newline at end of file"
    tail -n 1 $f | grep -qv . && puterr "$f: trailing empty line"
    grep --color=auto -H -n " * $" $f && error=1
  done

  [[ -n $error ]] && exit 1

  (echo "-R $MATHCOMP mathcomp";
   echo "-R $REGULAR regular";
   echo "$vfiles") > _CoqProject

  echo "((coq-mode . ((coq-prog-name . \"$COQBIN/coqtop\"))))" > .dir-locals.el

  make -j ${JOBS:-8} VFILES="$vfiles" PATH="$COQBIN:$PATH" \
       COQLIBS="$COQLIB" COQFLAGS="-debug -native-compiler"

popd # theories/*
end

#### Benchmarks

pushd ocaml

  for f in before after; do
    echo "module Presburger = Presburger_$f;;" > def.ml
    ocamlbuild -build-dir _presburger_$f -no-hygiene -just-plugin
    ocamlbuild -build-dir _presburger_$f -no-hygiene -package unix \
      -tag debug presburger_main.byte
    ocamlbuild -build-dir _presburger_$f -no-hygiene -package unix \
      presburger_main.native \
      -tag 'optimize(3)' \
      -tag 'remove_unused_arguments' \
      -tag 'unbox_closures' \
      -tag 'inlining_report'
  done

  for f in matrix wuf quicksort floyd_warshall; do
    ocamlbuild -build-dir _$f -no-hygiene -just-plugin
    ocamlbuild -build-dir _$f -no-hygiene -package unix \
      -tag debug ${f}_main.byte
    ocamlbuild -build-dir _$f -no-hygiene -package unix \
      ${f}_main.native \
      -tag 'optimize(3)' \
      -tag 'optimization_rounds(8)' \
      -tag 'remove_unused_arguments' \
      -tag 'unbox_closures' \
      -tag 'inlining_report' \
      #-tag 'dflambda-verbose'
  done

popd # ocaml
